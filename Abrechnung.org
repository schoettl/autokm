#+TITLE:    Abrechnung
#+SUBTITLE: Kilometerabrechnung von gemeinsam genutzten Autos
#+OPTIONS:  toc:nil num:nil timestamp:nil prop:t
#+AUTHOR:   Jakob Schöttl
#+EMAIL:    jakob.schoettl@yahoo.de

# 1. Check and correct start_datum
# 2. Execute code block prepare_ledger
# 3. Execute code block run_babel to generate exports
# 4. See Plausibilätscheck

Anfangsdatum für Auswertung:

#+name: start_datum
#+begin_src sh :exports results
echo 2024-07-06
#+end_src

#+RESULTS: start_datum
: 2024-07-06

# THIS CODE BLOCK MUST BE EXECUTED EXPLICITLY:
# (It is not executed on export!)

#+name: prepare_ledger
#+begin_src sh :exports none :results verbatim
  echo > kmstand.ledger
  echo 'commodity 9.999,99 €' >> kmstand.ledger
  echo 'commodity 9.999,99 km' >> kmstand.ledger
  echo 'P 2020-01-01 km 0,25 €' >> kmstand.ledger
  echo 'P 2022-03-10 km 0,30 €' >> kmstand.ledger
  awk -f org2hledger.awk -vextratag=auto:vw < ~/Dropbox/org/gschwisterl/auto.org 2>&1 >> kmstand.ledger
  awk -f org2hledger.awk -vextratag=auto:mercedes < ~/Dropbox/org/gschwisterl/auto_opa.org 2>&1 >> kmstand.ledger
#+end_src

#+RESULTS: prepare_ledger

#+name: run_babel
#+begin_src elisp :results none :exports none
  (setq org-confirm-babel-evaluate nil)
  (org-latex-export-to-pdf)
  (org-pandoc-export-to-plain) ;; non-pandoc alternative?
#+end_src

Kilometeraufstellung von … bis einschließlich …

#+begin_src sh :noweb yes :exports results
  echo <<start_datum()>>
  date -I
#+end_src

#+RESULTS:
| 2022-12-31 |
| 2023-10-28 |

Kilometergeld:

#+begin_src sh :noweb yes :results verbatim :exports results
  awk '/^P / { printf "seit %s: %s €/km\n", $2, $4 }' kmstand.ledger
#+end_src

#+RESULTS:

Kilometer-Anteile in Euro:

#+begin_src sh :noweb yes :results verbatim :exports results
  hledger -f kmstand.ledger balance -b <<start_datum()>> -V expenses:km
#+end_src

#+RESULTS:

Kilometer-Anteile in Kilometer:

#+begin_src sh :noweb yes :results verbatim :exports results
  hledger -f kmstand.ledger balance -b <<start_datum()>> expenses:km
#+end_src

#+RESULTS:

Kilometer-Anteile in Prozent:

#+begin_src sh :noweb yes :results verbatim :exports results
  hledger -f kmstand.ledger balance -b <<start_datum()>> -% expenses:km
#+end_src

#+RESULTS:

Kilometer-Anteile über die letzten Monate:

#+begin_src sh :noweb yes :results verbatim :exports results
  hledger -f kmstand.ledger balance -MT -b "$(echo <<start_datum()>> | head -c 7)" expenses:km
#+end_src

Kilometer-Anteile über die Jahre:

#+begin_src sh :results verbatim :exports results
  hledger -f kmstand.ledger balance -YTA expenses:km
#+end_src

Kilometer-Anteile über die Jahre in Prozent:

#+begin_src sh :results verbatim :exports results
  hledger -f kmstand.ledger balance -YTA% expenses:km
#+end_src

#+RESULTS:

Fahrtenbuch aus der organice App:

#+begin_src sh :noweb yes :results verbatim :exports results
  for i in vw mercedes; do
    echo
    echo "---------------------------"
    echo "Auto: ${i^^}"
    echo "---------------------------"
    echo
    hledger -f kmstand.ledger register -b <<start_datum()>> expenses:km -H tag:auto="$i"
  done
#+end_src

* Plausibilätscheck                                             :noexport:

Negative Kilometerdifferenzen:

#+begin_src bash :noweb yes :results verbatim :exports both
  hledger -f kmstand.ledger register -b <<start_datum()>> expenses:km 'amt:<0'
#+end_src

Verdächtig weite Fahrten:

#+begin_src bash :noweb yes :results verbatim :exports both
  hledger -f kmstand.ledger print -b <<start_datum()>> 'amt:>100' not:km:X
#+end_src

Verdächtig viele Beteiligte:

#+begin_src sh :noweb yes :results verbatim :exports both
  hledger -f kmstand.ledger print -b <<start_datum()>> \
   | awk 'BEGIN{FS="\n"; RS=""; ORS="\n\n"}; NF>4'
#+end_src

# TODO ein fahrer mehrmals angegeben?
# das macht alles das alte plausibel.sh script...

* COMMENT Using Radio Checkboxes to select the file

#+NAME: kmfile
#+ATTR_ORG: :radio t
- [ ] ~/Dropbox/org/gschwisterl/auto.org
- [X] ~/Dropbox/org/gschwisterl/auto_opa.org

Aber ohne weiteres kann ich anscheinend =<<kmfile()>>= nicht
in noweb src Blöcken verwenden.

https://kitchingroup.cheme.cmu.edu/blog/2015/10/05/A-checkbox-list-in-org-mode-with-one-value/
